@import "uikit/scss/uikit-variables";

$text-color:   #2f2f30;
$orange-color: #f17e00;
$green-color:  #bbd700;
$grey-color:   #7e7e7e;
$footer-color: #78728e;
$light-grey-color: #d5d5d6;
$orange-border-color: #ba6100;

$font-family: "PT Sans", arial, sans-serif;
$base-font-size: 16px;

$fonts: (
  base: (family: $font-family, ascender: 0.75, descender: 0.25, capline: 0.7, meanline: 0.5)
);

@mixin small {
  @media (min-width: $breakpoint-small) { @content; }
}

@mixin medium {
  @media (min-width: $breakpoint-medium) { @content; }
}

@mixin large {
  @media (min-width: $breakpoint-large) { @content; }
}

@mixin xlarge {
  @media (min-width: $breakpoint-xlarge) { @content; }
}

@mixin text {
  p, h1, h2, h3, h4, h5, h6, li { @content; }
}

@function em($size, $base: $base-font-size) {
  @if (unitless($size)) { $size: $size * 1px; }
  @if (unitless($base)) { $base: $base * 1px; }
  @return $size / $base * 1em;
}

@function get-font-family($family) {
  @return if(map-has-key($fonts, $family),
             map-get(map-get($fonts, $family), family),
             $family);
}

@mixin font($size: default, $line-height: default, $weight: default,
            $color: default, $align: default, $family: default,
            $style: default) {
  @if ($size != default) {
    @if (unitless($size)) { $size: $size * 1px; }
    font-size: $size;
  }
  @if ($line-height != default) { line-height: $line-height; }
  @if ($weight      != default) { font-weight: $weight; }
  @if ($color       != default) { color: $color; }
  @if ($align       != default) { text-align: $align; }
  @if ($family      != default) { font-family: get-font-family($family); }
  @if ($style       != default) { font-style: $style; }
}

@function font-top($space: 0px, $size: $base-font-size, $line-height: 1,
                   $family: base, $em: true, $line: capline) {
  @if (unitless($space)) { $space: $space * 1px; }
  @if (unitless($size)) { $size: $size * 1px; }
  @if ($family == default) { $family: base; }
  @if (not map-has-key($fonts, $family)) { @return $space; }
  $font: map-get($fonts, $family);
  @if (not map-has-key($font, $line)) { @return $space; }
  @if (unitless($line-height)) { $line-height: $size * $line-height; }
  $top: $space - $size * (map-get($font, ascender) - map-get($font, $line)) -
        ($line-height - $size) / 2;
  @return if($em, em($top, $size), $top);
}

@function font-bottom($space: 0px, $size: $base-font-size, $line-height: 1,
                      $family: base, $em: true) {
  @if (unitless($space)) { $space: $space * 1px; }
  @if (unitless($size)) { $size: $size * 1px; }
  @if ($family == default) { $family: base; }
  @if (not map-has-key($fonts, $family)) { @return $space; }
  $font: map-get($fonts, $family);
  @if (unitless($line-height)) { $line-height: $size * $line-height; }
  $bottom: $space - $size * map-get($font, descender) - ($line-height - $size) / 2;
  @return if($em, em($bottom, $size), $bottom);
}

@function font-between($space: 0px,
                       $size-above: $base-font-size, $line-height-above: 1, $family-above: base,
                       $size-below: $base-font-size, $line-height-below: 1, $family-below: base,
                       $em: above, $line: capline) {
  @if (unitless($space)) { $space: $space * 1px; }
  $above: font-bottom(0px, $size-above, $line-height-above, $family-above, false);
  $below: font-top(0px, $size-below, $line-height-below, $family-below, false, $line);
  $between: $space + $above + $below;
  @return if($em, em($between, if($em == above, $size-above, $size-below)), $between);
}

@mixin position($position,
                $left: default, $top: default,
                $width: default, $height: default,
                $right: default, $bottom: default,
                $z-index: default) {
  position: $position;
  @if $left    != default { left:    $left; }
  @if $top     != default { top:     $top; }
  @if $right   != default { right:   $right; }
  @if $bottom  != default { bottom:  $bottom; }
  @if $width   != default { width:   $width; }
  @if $height  != default { height:  $height; }
  @if $z-index != default { z-index: $z-index; }
}

@mixin size($width: default, $height: default) {
  // makes square size if only one dimmention specified
  $height: if($height == default and $width != default, $width,  $height);
  @if $width  != default { width:  $width; }
  @if $height != default { height: $height; }
}
